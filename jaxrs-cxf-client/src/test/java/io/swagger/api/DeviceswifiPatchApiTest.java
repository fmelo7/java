/**
 * API Portal
 * AMX - Cat√°logo de API's
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.api;

import java.util.ArrayList;
import java.util.List;

import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.WebClient;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import io.swagger.model.Body;
import io.swagger.model.DeviceswifiData;
import io.swagger.model.DeviceswifiResponsePATCH;

/**
 * API tests for DeviceswifiPatchApi
 */
public class DeviceswifiPatchApiTest {

	private DeviceswifiPatchApi api;

	@Before
	public void setup() {
		JacksonJsonProvider provider = new JacksonJsonProvider();
		List providers = new ArrayList();
		providers.add(provider);
		String username = "APP_MOBILE";
		String password = "x1234567";
		String authentication = org.apache.cxf.common.util.Base64Utility.encode((username + ":" + password).getBytes());
		String authorizationHeader = "Basic " + authentication;

		// api = JAXRSClientFactory.create("https://apistage.net.com.br/sdp",
		// DeviceswifiPatchApi.class, providers);
		api = JAXRSClientFactory.create("http://localhost:8080/sdp", DeviceswifiPatchApi.class, providers);

		org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);
		// client.header("Authorization", authorizationHeader);
		// client.header("X-HTTP-Method-Override", "PATCH");

		ClientConfiguration config = WebClient.getConfig(client);
	}

	/**
	 * Alterar a senha wifi do cliente NET.
	 *
	 * O recurso /deviceswifi PATCH tem como objetivo prover para o cliente a
	 * funcionalidade de alterar a senha ou ssid de um dispositivo Wi-Fi Net nos
	 * canais de autoatendimento Digital, Site Net Combo e Mobile.
	 *
	 * @throws ApiException
	 *             if the Api call fails
	 */
	@Test
	public void deviceswifiPatchTest() {
		String xApiVersion = null;
		String xMetadata = null;

		Body body = createBodyAlterarRede();

		DeviceswifiResponsePATCH response = api.deviceswifiPatch(xApiVersion, xMetadata, body);

		Assert.assertNotNull(response);

		System.out.println("response: " + response);
	}

	private Body createBodyAlterarRede() {
		Body body = new Body();
		DeviceswifiData data = new DeviceswifiData();
		data.setLegalNatureCode("003");
		data.setInternetProtocol("10.40.15.168");
		data.setPhysicalResourceModelName("HG100R-L2");
		data.setPortName("");
		data.setSsid("teste_ssid");
		body.setData(data);
		return body;
	}
}
